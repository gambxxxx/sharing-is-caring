---
AWSTemplateFormatVersion: "2010-09-09"

Description: Lab VPC with Bastion Host

Resources: 
  VPC:
    Type: AWS::EC2::VPC
    CidrBlock: 172.31.0.0/20
    EnableDnsSupport: true
    EnableDnsHostNames: true
    InstanceTenancy: default

  InternetGatewayAttachment:
    Type: AWS::EC2::InternetGateway

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VPCId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  SubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-1a
      VPCId: !Ref VPC
      CidrBlock: 172.31.0.0/20
      MapPublicIpOnLanunch: true

  SubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-1b
      VPCId: !Ref VPC
      CidrBlock: 172.31.16.0/20
      MapPublicIpOnLaunch: true

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VPCId: !Ref VPC

  InternetRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGateway
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref RouteTable

  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref SubnetA

  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref SubnetB

  BastionAMIOS:
    AllowedValues:
    - Amazon-Linux-HVM
    - CentOS-7-HVM
    - Ubuntu-Server-14.04-LTS-HVM
    - Ubuntu-Server-16.04-LTS-HVM
    Default: Amazon-Linux-HVM
    Description: Linux Distro to use
    Type: String

  BastionInstanceType:
    AllowedValues:
    - t2.nano
    - t2.micro
    Default: t2.micro
    Description: EC2 instance type
    Type: String

  EnableTCPForwarding:
    Type: String
    Description: Enable/Disable TCP Forwarding
    Default: 'false'
    AllowedValues:
    - 'true'
    - 'false'

  EnableX11Forwarding:
    Type: String
    Description: Enable/Disable X11 Forwarding
    Default: 'false'
    AllowedValues:
    - 'true'
    - 'false'

  KeyPairName:
    Description: Enter public/private key pair. If you do not have one, please create it before continuing.
    Type: AWS::EC2::KeyPair::KeyName

  NumBastionHosts:
    AllowedValues:
    - '1'
    - '2'
    Default: '1'
    Description: Enter the number of bastion hosts to create
    Type: String

  PublicSubnetID:
    Description: ID of private subnet you want to provision the bastion host into
    Type: AWS::EC2::Subnet::Id

  RemoteAccessCIDR:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"
    Description: Allowed CIDR block for external ssh access.
    Type: String

  VPCID:
    Description: ID of the VPC
    VPCId: !Ref VPC

  BastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable ssh access to bastion hosts
      VPCID: !Ref VPCID
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: !Ref RemoteAccessCIDR

  NAT:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocatedId: 
        Fn::GetAtt:
        - EIP
        - AllocationId
      SubnetId: !Ref SubnetA

  Route:
    Type: AWS::EC2::Route
    Properties:
      RouteTableID: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref Nat